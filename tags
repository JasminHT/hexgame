!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ContinentsTileGenerator	TileGenerator.js	/^function ContinentsTileGenerator() {$/;"	c
ContinentsTileGenerator.generateTile	TileGenerator.js	/^  this.generateTile = function(x,y) {$/;"	m
HexMapGenerator	MapGenerator.js	/^}$/;"	c
HexMapGenerator.addShallowWater	MapGenerator.js	/^HexMapGenerator.prototype.addShallowWater = function() {$/;"	m
HexMapGenerator.addWaterRim	MapGenerator.js	/^HexMapGenerator.prototype.addWaterRim = function(rim_size) {$/;"	m
HexMapGenerator.flatenRange	MapGenerator.js	/^HexMapGenerator.prototype.flatenRange = function(range_min,range_max) {$/;"	m
HexMapGenerator.generateMap	MapGenerator.js	/^HexMapGenerator.prototype.generateMap = function(method,radius) {$/;"	m
HexMapGenerator.getMap	MapGenerator.js	/^	this.getMap = function(){$/;"	m
HexMapGenerator.getTile	MapGenerator.js	/^	this.getTile = function(hex) {$/;"	m
HexMapGenerator.makeTileGenerator	MapGenerator.js	/^HexMapGenerator.prototype.makeTileGenerator = function(method) {$/;"	m
HexMapGenerator.roundDown	MapGenerator.js	/^HexMapGenerator.prototype.roundDown = function() {$/;"	m
HexMapGenerator.setTile	MapGenerator.js	/^	this.setTile = function(hex,new_value) {$/;"	m
PathFinder	PathFinder.js	/^function PathFinder(map) {$/;"	c
PathFinder.destinationPathfind	PathFinder.js	/^	this.destinationPathfind = function(origin, destination, range) {$/;"	m
PathFinder.moveCostAbsolute	PathFinder.js	/^	this.moveCostAbsolute = function(other_tile) {$/;"	m
PathFinder.moveCostNeighbor	PathFinder.js	/^	this.moveCostNeighbor = function(this_tile, other_tile) {$/;"	m
PathFinder.moveCostRelative	PathFinder.js	/^	this.moveCostRelative = function(origin, destination,range) {$/;"	m
PathFinder.rangePathfind	PathFinder.js	/^	this.rangePathfind = function(origin,range) {$/;"	m
PathFinder.sight	PathFinder.js	/^	this.sight = function(origin,range) {$/;"	m
PathFinder.updateMap	PathFinder.js	/^	this.updateMap = function(map) {$/;"	m
PathFinderCell	PathFinder.js	/^function PathFinderCell(path_cost,came_from,value) {$/;"	c
PerlinConfiguration	TileGenerator.js	/^$/;"	c
PerlinConfiguration.getLength	TileGenerator.js	/^	this.getLength = function() {$/;"	m
PerlinConfiguration.setConfig	TileGenerator.js	/^	this.setConfig = function(config_name) {$/;"	m
PerlinConfiguration.setConfigAlgorithmically	TileGenerator.js	/^	this.setConfigAlgorithmically = function(base,scale_initial,scale_ratio,weight_initial,weight_ratio) {$/;"	m
PerlinCustomTileGenerator	TileGenerator.js	/^function PerlinCustomTileGenerator() {$/;"	c
PerlinCustomTileGenerator.generateNoise	TileGenerator.js	/^    this.generateNoise = function() {$/;"	m
PerlinCustomTileGenerator.generateTile	TileGenerator.js	/^    this.generateTile = function(x,y) {$/;"	m
PerlinTileGenerator	TileGenerator.js	/^function PerlinTileGenerator() {$/;"	c
PerlinTileGenerator.generateTile	TileGenerator.js	/^	this.generateTile = function(x,y) {$/;"	m
RandomTileGenerator	TileGenerator.js	/^function RandomTileGenerator() {$/;"	c
RandomTileGenerator.generateTile	TileGenerator.js	/^	this.generateTile = function(x,y) {$/;"	m
Rect	View.js	/^function Rect(position,size) {$/;"	c
Renderer	Renderer.js	/^function Renderer(canvas_draw,view) {$/;"	c
Renderer.doneRendering	Renderer.js	/^    Renderer.prototype.doneRendering = function(maximum_rendering_time_in_milliseconds) {$/;"	m
Renderer.drawDot	Renderer.js	/^    Renderer.prototype.drawDot = function (point,size,color) {$/;"	m
Renderer.drawLine	Renderer.js	/^    Renderer.prototype.drawLine = function(point1,point2,line_width,color) {$/;"	m
Renderer.drawLines	Renderer.js	/^    Renderer.prototype.drawLines = function(points,width) {$/;"	m
Renderer.drawText	Renderer.js	/^    Renderer.prototype.drawText = function(text,position,shade,fontsize) {$/;"	m
Renderer.readyToRender	Renderer.js	/^    Renderer.prototype.readyToRender = function() {$/;"	m
Renderer.startRendering	Renderer.js	/^    Renderer.prototype.startRendering = function() {$/;"	m
TileGenerator	TileGenerator.js	/^function TileGenerator() {$/;"	f
TileGenerator	TileGenerator.js	/^}$/;"	c
TileGenerator.generateTile	TileGenerator.js	/^TileGenerator.prototype.generateTile = function(x,y) {$/;"	m
TileRenderer	Renderer.js	/^}$/;"	c
TileRenderer.drawTile	Renderer.js	/^TileRenderer.prototype.drawTile = function(hex,value) {$/;"	m
TileRenderer.mapColors	Renderer.js	/^TileRenderer.prototype.mapColors = function(i) {$/;"	m
TileRenderer2D	Renderer.js	/^}$/;"	c
TileRenderer2D.drawTile	Renderer.js	/^TileRenderer2D.prototype.drawTile = function(hex,value) {$/;"	m
Unit	Unit.js	/^function Unit(unit_type) {$/;"	c
Unit.findRange	Unit.js	/^	Unit.prototype.findRange = function(map,position) {$/;"	m
Unit.getComponent	Unit.js	/^	Unit.prototype.getComponent = function(component_name) {$/;"	m
Unit.hasComponent	Unit.js	/^	Unit.prototype.hasComponent = function(component_name) {$/;"	m
Unit.move	Unit.js	/^	Unit.prototype.move = function(map,current_hex,next_hex) {$/;"	m
Unit.setMovement	Unit.js	/^	Unit.prototype.setMovement = function(movement) {$/;"	m
Unit.setType	Unit.js	/^	Unit.prototype.setType = function(unit_type) {$/;"	m
UnitController	UnitController.js	/^function UnitController(world) {$/;"	c
UnitController.aUnitIsSelected	UnitController.js	/^UnitController.prototype.aUnitIsSelected = function() {$/;"	m
UnitController.actionUnit	UnitController.js	/^UnitController.prototype.actionUnit = function(current_hex,target_hex) {$/;"	m
UnitController.clickHex	UnitController.js	/^UnitController.prototype.clickHex = function(hex_clicked) {$/;"	m
UnitController.clickInsideSelectedUnitRange	UnitController.js	/^UnitController.prototype.clickInsideSelectedUnitRange = function(hex_clicked) {$/;"	m
UnitController.clickOutsideSelectedUnitRange	UnitController.js	/^UnitController.prototype.clickOutsideSelectedUnitRange = function(hex_clicked) {$/;"	m
UnitController.clickWhileNothingSelected	UnitController.js	/^UnitController.prototype.clickWhileNothingSelected = function(hex_clicked) {$/;"	m
UnitController.clickWhileUnitSelected	UnitController.js	/^UnitController.prototype.clickWhileUnitSelected = function(hex_clicked) {$/;"	m
UnitController.getHexSelected	UnitController.js	/^UnitController.prototype.getHexSelected = function()  {$/;"	m
UnitController.getUnitSelected	UnitController.js	/^UnitController.prototype.getUnitSelected = function() {$/;"	m
UnitController.moveUnit	UnitController.js	/^UnitController.prototype.moveUnit = function(current_hex,new_hex) {$/;"	m
UnitController.reClickUnit	UnitController.js	/^UnitController.prototype.reClickUnit = function() {$/;"	m
UnitController.selectHex	UnitController.js	/^UnitController.prototype.selectHex = function(hex) {$/;"	m
UnitController.selfActionUnit	UnitController.js	/^UnitController.prototype.selfActionUnit = function(unit_hex) {$/;"	m
UnitController.tellSelectedUnitToMove	UnitController.js	/^UnitController.prototype.tellSelectedUnitToMove = function(hex_clicked) {$/;"	m
View	View.js	/^function View (input_rect,output_rect) {$/;"	c
View.getCenter	View.js	/^    this.getCenter = function() {$/;"	m
View.getInputRect	View.js	/^    this.getInputRect = function() {$/;"	m
View.getOutputRect	View.js	/^    this.getOutputRect = function() {$/;"	m
View.getScale	View.js	/^    View.prototype.getScale = function() { $/;"	m
View.resizeOutput	View.js	/^    this.resizeOutput = function(width,height) {$/;"	m
View.screenToWorld	View.js	/^    this.screenToWorld = function(point) {$/;"	m
View.screenToWorld1D	View.js	/^    this.screenToWorld1D = function(scalar) {$/;"	m
View.setCenter	View.js	/^    this.setCenter = function(point) {$/;"	m
View.setPosition	View.js	/^    this.setPosition = function(point) { $/;"	m
View.shiftPosition	View.js	/^    this.shiftPosition = function(point) {$/;"	m
View.worldToScreen	View.js	/^    this.worldToScreen = function(point) {$/;"	m
View.worldToScreen1D	View.js	/^    this.worldToScreen1D = function(scalar) {$/;"	m
View.zoom	View.js	/^    this.zoom = function(n) {$/;"	m
World	World.js	/^function World(size,layout) {$/;"	c
World.addFishToMap	World.js	/^World.prototype.addFishToMap = function() {$/;"	m
World.addTreesToMap	World.js	/^World.prototype.addTreesToMap = function() {$/;"	m
World.createUnit	World.js	/^World.prototype.createUnit = function(hex,unit_type) {$/;"	m
World.generateWorldMap	World.js	/^World.prototype.generateWorldMap = function(size) {$/;"	m
World.hexToPoint	World.js	/^World.prototype.hexToPoint = function(hex) {$/;"	m
World.init	World.js	/^World.prototype.init = function() {$/;"	m
World.pointToHex	World.js	/^World.prototype.pointToHex = function(point) {$/;"	m
World.removeUnit	World.js	/^World.prototype.removeUnit = function(hex) {$/;"	m
World.unitAtPosition	World.js	/^World.prototype.unitAtPosition = function(hex) {$/;"	m
WorldInterface	World.js	/^function WorldInterface(world,view) {$/;"	c
WorldInterface.clickScreenEvent	World.js	/^WorldInterface.prototype.clickScreenEvent = function(screen_position) {$/;"	m
WorldInterface.dragEvent	World.js	/^WorldInterface.prototype.dragEvent = function(current_mouse,previous_mouse) {$/;"	m
WorldInterface.getHex	World.js	/^WorldInterface.prototype.getHex = function(screen_position) {$/;"	m
WorldInterface.getView	World.js	/^WorldInterface.prototype.getView = function() {$/;"	m
WorldInterface.hoverEvent	World.js	/^WorldInterface.prototype.hoverEvent = function(screen_position) {$/;"	m
WorldInterface.init	World.js	/^WorldInterface.prototype.init = function() {$/;"	m
WorldInterface.moveView	World.js	/^WorldInterface.prototype.moveView = function(direction) {$/;"	m
WorldInterface.resizeEvent	World.js	/^WorldInterface.prototype.resizeEvent = function(width,height) {$/;"	m
WorldInterface.setHex	World.js	/^WorldInterface.prototype.setHex = function(screen_position,value) {$/;"	m
WorldInterface.setView	World.js	/^WorldInterface.prototype.setView = function(view) {$/;"	m
WorldInterface.zoomViewEvent	World.js	/^WorldInterface.prototype.zoomViewEvent = function(zoom) {$/;"	m
WorldRenderer	Renderer.js	/^}$/;"	c
WorldRenderer.drawHex	Renderer.js	/^    WorldRenderer.prototype.drawHex = function(hex,line_width,fill_color,line_color) {$/;"	m
WorldRenderer.drawHexElevated	Renderer.js	/^    WorldRenderer.prototype.drawHexElevated = function(hex,height,line_width,color_sides,color_top) {$/;"	m
WorldRenderer.drawHexes	Renderer.js	/^    WorldRenderer.prototype.drawHexes = function(hexes,line_width,color) {$/;"	m
WorldRenderer.drawPath	Renderer.js	/^    WorldRenderer.prototype.drawPath = function(range,destination) {$/;"	m
WorldRenderer.drawRange	Renderer.js	/^    WorldRenderer.prototype.drawRange = function(range) {$/;"	m
WorldRenderer.drawRectangleSection	Renderer.js	/^    WorldRenderer.prototype.drawRectangleSection = function(qmin,qmax,rmin,rmax) {$/;"	m
WorldRenderer.drawRectangleSectionLine	Renderer.js	/^    WorldRenderer.prototype.drawRectangleSectionLine = function(r,currentr,qmin,qmax,rmin,rmax) {$/;"	m
WorldRenderer.drawRedRenderingRectangle	Renderer.js	/^    WorldRenderer.prototype.drawRedRenderingRectangle = function(qmin,qmax,rmin,rmax) {$/;"	m
WorldRenderer.drawTile2D	Renderer.js	/^    WorldRenderer.prototype.drawTile2D = function(hex) {$/;"	m
WorldRenderer.drawTile3D	Renderer.js	/^    WorldRenderer.prototype.drawTile3D = function(hex) {$/;"	m
WorldRenderer.drawTileSemi3D	Renderer.js	/^    WorldRenderer.prototype.drawTileSemi3D = function(hex) {$/;"	m
WorldRenderer.drawUnit	Renderer.js	/^    WorldRenderer.prototype.drawUnit = function(unit,hex,height) {$/;"	m
WorldRenderer.drawWorld	Renderer.js	/^    WorldRenderer.prototype.drawWorld = function() {$/;"	m
WorldRenderer.fastDrawHex	Renderer.js	/^    WorldRenderer.prototype.fastDrawHex = function(hex,fill_color) {$/;"	m
WorldRenderer.getHexRectangleBoundaries	Renderer.js	/^    WorldRenderer.prototype.getHexRectangleBoundaries = function() {$/;"	m
WorldRenderer.hexToPoint	Renderer.js	/^    WorldRenderer.prototype.hexToPoint = function(hex) {$/;"	m
WorldRenderer.hexesToPoints	Renderer.js	/^    WorldRenderer.prototype.hexesToPoints = function(hexes) {$/;"	m
WorldRenderer.mapColors	Renderer.js	/^    WorldRenderer.prototype.mapColors = function(i) {$/;"	m
WorldRenderer.pointToHex	Renderer.js	/^    WorldRenderer.prototype.pointToHex = function(point) {$/;"	m
canvas	HexGame.js	/^			var canvas = document.getElementById('mycanvas');$/;"	v
drawScreen	HexGame.js	/^			function drawScreen() {$/;"	f
function.TileRenderer	Renderer.js	/^function TileRenderer () {$/;"	f
function.TileRenderer2D	Renderer.js	/^function TileRenderer2D() {$/;"	f
function.WorldRenderer	Renderer.js	/^function WorldRenderer (canvas_draw,view,world) {$/;"	c
initial_zoom	HexGame.js	/^			var initial_zoom = 1\/4;$/;"	v
map_radius	HexGame.js	/^			var map_radius = 50;$/;"	v
newWorld	HexGame.js	/^			function newWorld() {$/;"	f
this.components.components.range	Unit.js	/^			this.components.ground_action_create_unit = {range:0, type:'fast-player'};$/;"	p
this.components.components.type	Unit.js	/^			this.components.ground_action_create_unit = {range:0, type:'fast-player'};$/;"	p
var.greenscale_colors	Renderer.js	/^var greenscale_colors = function(i) {$/;"	m
view_ratio	HexGame.js	/^			var view_ratio = canvas.width\/canvas.height;$/;"	v
